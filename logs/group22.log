2020-07-15 00:33:19.060 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 13424 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 00:33:19.077 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 00:33:21.983 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 00:33:21.984 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 00:33:22.302 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 00:33:23.457 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 5.437 seconds (JVM running for 7.818)
2020-07-15 00:34:05.504 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 00:34:21.927 [http-nio-8080-exec-4] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 00:34:21.933 [http-nio-8080-exec-4] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 00:34:22.589 [http-nio-8080-exec-4] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 00:34:22.590 [http-nio-8080-exec-4] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 00:34:22.712 [http-nio-8080-exec-4] ERROR C.G.S.CustomAuthenticationManager: The user credentials do not match the database stored values!
2020-07-15 00:34:38.083 [http-nio-8080-exec-6] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 00:34:38.091 [http-nio-8080-exec-6] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 00:34:38.292 [http-nio-8080-exec-6] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 00:34:38.300 [http-nio-8080-exec-6] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 00:34:38.411 [http-nio-8080-exec-6] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 00:34:43.066 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 00:34:43.080 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 00:34:43.081 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 00:34:43.253 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 00:34:43.262 [http-nio-8080-exec-8] INFO  C.G.Course.CourseRepository: Calling stored procedure sp_getAllCourseDetails to get all course details
2020-07-15 00:35:13.930 [http-nio-8080-exec-1] INFO  C.GroupFormationTool.Course.Course: Creating a new course and storing it in the database
2020-07-15 00:35:13.941 [http-nio-8080-exec-1] INFO  C.G.Course.CourseRepository: Calling stored procedure sp_createCourse to create a course
2020-07-15 00:35:14.190 [http-nio-8080-exec-1] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 00:35:14.198 [http-nio-8080-exec-1] INFO  C.G.Course.CourseRepository: Calling stored procedure sp_getAllCourseDetails to get all course details
2020-07-15 00:35:14.366 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: A Course is successfully added
2020-07-15 00:35:18.949 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionAdminController: Fetching course details using courseId from the Database
2020-07-15 00:35:18.962 [http-nio-8080-exec-2] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 00:35:18.988 [http-nio-8080-exec-2] INFO  C.G.Course.CourseRepository: Calling stored procedure sp_getCourseById to get a course details by Course Id
2020-07-15 00:35:19.161 [http-nio-8080-exec-2] INFO  C.G.Question.Question: The function call return the users that are not enrolled as an instructor for a course
2020-07-15 00:35:19.169 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUsersCurrentlyNotInstructorsForCourse to get users that are not instrcutors for the course
2020-07-15 00:35:19.622 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionAdminController: Fetching instructors list for a course using courseId
2020-07-15 00:35:19.630 [http-nio-8080-exec-2] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 00:35:19.631 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorsForCourse to get instructor for a Course
2020-07-15 00:35:51.601 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionAdminController: Fetching course details by using course Id
2020-07-15 00:35:51.605 [http-nio-8080-exec-4] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 00:35:51.608 [http-nio-8080-exec-4] INFO  C.G.Course.CourseRepository: Calling stored procedure sp_getCourseById to get a course details by Course Id
2020-07-15 00:35:51.797 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionAdminController: Assign/Add instructor to a course
2020-07-15 00:35:51.806 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Function call to add an instructor for a course using course Id and email Id
2020-07-15 00:35:51.806 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_addInstructorsToCourse to add instructor to a Course using Course Id
2020-07-15 00:36:07.430 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionAdminController: Fetch instructor for a course
2020-07-15 00:36:07.431 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 00:36:07.433 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorsForCourse to get instructor for a Course
2020-07-15 00:40:15.136 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 15080 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 00:40:15.154 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 00:40:16.684 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 00:40:16.688 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 00:40:16.904 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 00:40:17.678 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.058 seconds (JVM running for 4.175)
2020-07-15 00:40:52.591 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 00:41:10.878 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 00:41:10.888 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 00:41:11.475 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 00:41:11.477 [http-nio-8080-exec-3] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 00:41:11.598 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 00:41:14.533 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 00:41:14.534 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 00:41:14.535 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 00:41:14.708 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 00:41:14.716 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 00:41:14.716 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 00:41:14.889 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 00:41:14.896 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 00:41:14.898 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 00:41:36.839 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 00:41:36.842 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 00:41:36.843 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added invalid students data in a bad data list
2020-07-15 00:41:36.844 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 00:41:36.852 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 00:41:37.009 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 00:41:37.306 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 00:41:37.481 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 00:41:37.741 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 00:41:38.160 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 00:41:38.369 [http-nio-8080-exec-7] WARN  C.G.Q.QuestionManagerRepository: The Bad data list is created with data from the uploaded CSV file
2020-07-15 00:41:38.379 [http-nio-8080-exec-7] INFO  C.G.Mail.MailManager: smtp connection for mail has been setup
2020-07-15 00:41:42.234 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: If Student list is not empty then create different lists with new students, existing students and bad data if any
2020-07-15 00:41:53.361 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 00:41:53.371 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 00:41:53.374 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 00:41:53.556 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 00:41:53.564 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 00:41:53.565 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 00:41:53.727 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 00:41:53.744 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 00:41:53.745 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 00:42:07.595 [http-nio-8080-exec-9] INFO  C.G.C.InstructorCourseController: Checking if instructor has created a survey for the course
2020-07-15 00:42:07.608 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 00:42:07.609 [http-nio-8080-exec-9] INFO  C.G.Survey.SurveyRepository: Calling stored procedure sp_getSurveyId to fetch the groups for the course
2020-07-15 00:42:21.979 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 00:42:21.990 [http-nio-8080-exec-10] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 00:42:22.004 [http-nio-8080-exec-10] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 00:42:22.177 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 00:42:22.185 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 00:42:22.186 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 00:42:22.348 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 00:42:22.356 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 00:42:22.356 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 00:42:34.745 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 00:42:34.751 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 00:42:34.925 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 00:42:34.932 [http-nio-8080-exec-3] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 00:42:35.052 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 00:42:37.031 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 00:42:37.037 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 00:42:37.052 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 00:42:37.263 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 00:42:37.272 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 00:42:37.273 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 00:42:37.445 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 00:42:37.452 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 00:42:37.454 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 00:42:37.455 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 00:42:39.464 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 00:42:39.477 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 00:42:43.060 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 00:42:43.072 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 00:42:43.086 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 00:42:43.262 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 00:42:43.271 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 00:42:43.272 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 00:42:43.437 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 00:42:43.445 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 00:42:43.446 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 00:42:43.447 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:18:02.361 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 5752 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 10:18:02.379 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 10:18:04.386 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 10:18:04.389 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 10:18:04.702 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 10:18:05.605 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.966 seconds (JVM running for 5.677)
2020-07-15 10:18:21.811 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 10:19:35.265 [http-nio-8080-exec-4] INFO  C.G.S.UserRegistrationController: Fetching the password policies of the system
2020-07-15 10:19:35.267 [http-nio-8080-exec-4] INFO  C.G.Password.Policy: Calling the Policy Repository to fetch all the password security policies from database
2020-07-15 10:19:35.276 [http-nio-8080-exec-4] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPolicies to fetch all the policies from database
2020-07-15 10:20:21.734 [http-nio-8080-exec-5] INFO  C.G.S.UserRegistrationController: Creating the user and saving the new user to the database
2020-07-15 10:20:21.737 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 10:20:21.740 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 10:20:21.745 [http-nio-8080-exec-5] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 10:20:21.749 [http-nio-8080-exec-5] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPasswordConfigSettings to fetch the policies from database
2020-07-15 10:20:21.941 [http-nio-8080-exec-5] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 10:20:21.943 [http-nio-8080-exec-5] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:20:22.103 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:20:22.296 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Calling the user repository function to save the new user to Database
2020-07-15 10:20:22.297 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling stored procedure sp_create_user to save the new user to the database
2020-07-15 10:20:22.780 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserId to fetch user Id for given emailId
2020-07-15 10:20:23.146 [http-nio-8080-exec-5] INFO  C.G.S.UserRegistrationController: Redirecting to user login page after successful registration
2020-07-15 10:20:58.370 [http-nio-8080-exec-6] INFO  C.G.S.UserRegistrationController: Fetching the password policies of the system
2020-07-15 10:20:58.380 [http-nio-8080-exec-6] INFO  C.G.Password.Policy: Calling the Policy Repository to fetch all the password security policies from database
2020-07-15 10:20:58.410 [http-nio-8080-exec-6] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPolicies to fetch all the policies from database
2020-07-15 10:21:55.714 [http-nio-8080-exec-7] INFO  C.G.S.UserRegistrationController: Creating the user and saving the new user to the database
2020-07-15 10:21:55.723 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 10:21:55.724 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 10:21:55.726 [http-nio-8080-exec-7] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 10:21:55.728 [http-nio-8080-exec-7] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPasswordConfigSettings to fetch the policies from database
2020-07-15 10:21:55.924 [http-nio-8080-exec-7] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 10:21:55.932 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:21:56.092 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:21:56.262 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Calling the user repository function to save the new user to Database
2020-07-15 10:21:56.269 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling stored procedure sp_create_user to save the new user to the database
2020-07-15 10:21:56.438 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserId to fetch user Id for given emailId
2020-07-15 10:21:56.813 [http-nio-8080-exec-7] INFO  C.G.S.UserRegistrationController: Redirecting to user login page after successful registration
2020-07-15 10:22:18.502 [http-nio-8080-exec-8] INFO  C.G.S.UserRegistrationController: Fetching the password policies of the system
2020-07-15 10:22:18.511 [http-nio-8080-exec-8] INFO  C.G.Password.Policy: Calling the Policy Repository to fetch all the password security policies from database
2020-07-15 10:22:18.528 [http-nio-8080-exec-8] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPolicies to fetch all the policies from database
2020-07-15 10:22:52.068 [http-nio-8080-exec-9] INFO  C.G.S.UserRegistrationController: Creating the user and saving the new user to the database
2020-07-15 10:22:52.072 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 10:22:52.075 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 10:22:52.077 [http-nio-8080-exec-9] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 10:22:52.080 [http-nio-8080-exec-9] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPasswordConfigSettings to fetch the policies from database
2020-07-15 10:22:52.275 [http-nio-8080-exec-9] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 10:22:52.282 [http-nio-8080-exec-9] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:22:52.448 [http-nio-8080-exec-9] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:22:52.618 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.User.User: Calling the user repository function to save the new user to Database
2020-07-15 10:22:52.626 [http-nio-8080-exec-9] INFO  C.G.User.UserRepository: Calling stored procedure sp_create_user to save the new user to the database
2020-07-15 10:22:52.785 [http-nio-8080-exec-9] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserId to fetch user Id for given emailId
2020-07-15 10:22:53.153 [http-nio-8080-exec-9] INFO  C.G.S.UserRegistrationController: Redirecting to user login page after successful registration
2020-07-15 10:23:15.932 [http-nio-8080-exec-10] INFO  C.G.S.UserRegistrationController: Fetching the password policies of the system
2020-07-15 10:23:15.944 [http-nio-8080-exec-10] INFO  C.G.Password.Policy: Calling the Policy Repository to fetch all the password security policies from database
2020-07-15 10:23:15.948 [http-nio-8080-exec-10] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPolicies to fetch all the policies from database
2020-07-15 10:23:47.249 [http-nio-8080-exec-1] INFO  C.G.S.UserRegistrationController: Creating the user and saving the new user to the database
2020-07-15 10:23:47.258 [http-nio-8080-exec-1] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 10:23:47.263 [http-nio-8080-exec-1] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 10:23:47.265 [http-nio-8080-exec-1] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 10:23:47.266 [http-nio-8080-exec-1] INFO  C.G.Password.PolicyRepository: Calling stored procedure sp_getPasswordConfigSettings to fetch the policies from database
2020-07-15 10:23:47.459 [http-nio-8080-exec-1] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 10:23:47.466 [http-nio-8080-exec-1] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:23:47.624 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:23:47.804 [http-nio-8080-exec-1] INFO  C.GroupFormationTool.User.User: Calling the user repository function to save the new user to Database
2020-07-15 10:23:47.805 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling stored procedure sp_create_user to save the new user to the database
2020-07-15 10:23:48.099 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserId to fetch user Id for given emailId
2020-07-15 10:23:48.453 [http-nio-8080-exec-1] INFO  C.G.S.UserRegistrationController: Redirecting to user login page after successful registration
2020-07-15 10:24:41.478 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 10:24:41.494 [http-nio-8080-exec-2] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:24:41.679 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 10:24:41.687 [http-nio-8080-exec-2] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 10:24:41.824 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 10:24:49.240 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:24:49.242 [http-nio-8080-exec-4] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:24:49.246 [http-nio-8080-exec-4] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:24:49.411 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:24:49.421 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:24:49.422 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:24:49.615 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 10:24:49.623 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 10:24:49.626 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 10:27:13.400 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 10:27:13.402 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 10:27:13.404 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 10:27:13.406 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 10:27:13.407 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 10:27:13.422 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 10:27:13.863 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:27:14.489 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 10:27:14.883 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:27:15.113 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 10:27:15.375 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:27:15.602 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 10:27:15.771 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:27:16.060 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_createStudentFromCSV to create a student from the CSV file uploaded by the instructor to the database
2020-07-15 10:27:16.206 [http-nio-8080-exec-7] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 10:27:16.527 [http-nio-8080-exec-7] WARN  C.G.Q.QuestionManagerRepository: The Bad data list is created with data from the uploaded CSV file
2020-07-15 10:27:16.536 [http-nio-8080-exec-7] INFO  C.G.Mail.MailManager: smtp connection for mail has been setup
2020-07-15 10:27:16.538 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: If Student list is not empty then create different lists with new students, existing students and bad data if any
2020-07-15 10:27:30.380 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:27:30.385 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:27:30.386 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:27:30.558 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:27:30.566 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:27:30.569 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:27:30.739 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 10:27:30.741 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 10:27:30.742 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 10:27:44.207 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 10:27:44.366 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:27:44.535 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 10:27:44.537 [http-nio-8080-exec-1] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 10:27:44.707 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 10:27:49.725 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:27:49.734 [http-nio-8080-exec-3] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:27:49.749 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:27:49.923 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:27:49.933 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:27:49.935 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:27:50.111 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:27:50.122 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:27:50.125 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:27:50.128 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:27:52.616 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:27:52.620 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:27:53.326 [http-nio-8080-exec-4] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:27:55.576 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:27:55.582 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:27:56.152 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:27:56.330 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:29:41.431 [http-nio-8080-exec-7] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:29:41.617 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:29:41.807 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:29:42.131 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:29:42.298 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:29:42.634 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:29:46.136 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:29:46.144 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:29:46.163 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:29:46.341 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:29:46.353 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:29:46.355 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:29:46.525 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:29:46.534 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:29:46.538 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:29:46.540 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:29:54.619 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 10:29:54.620 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:29:54.786 [http-nio-8080-exec-1] ERROR C.G.S.CustomAuthenticationManager: The user credentials do not match the database stored values!
2020-07-15 10:30:03.886 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 10:30:03.895 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:30:04.068 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 10:30:04.077 [http-nio-8080-exec-3] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 10:30:04.220 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 10:30:08.945 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:30:08.956 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:30:08.970 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:30:09.141 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:30:09.151 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:30:09.156 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:30:09.326 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:30:09.328 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:30:09.330 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:30:09.332 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:30:11.380 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:30:11.384 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:30:12.040 [http-nio-8080-exec-6] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:30:13.901 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:30:13.922 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:30:14.419 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:30:14.601 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:30:33.981 [http-nio-8080-exec-8] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:30:34.160 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:30:34.340 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:30:34.683 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:30:34.847 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:30:35.182 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:30:35.523 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:30:39.555 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:30:39.560 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:30:39.577 [http-nio-8080-exec-9] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:30:39.755 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:30:39.764 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:30:39.766 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:30:39.933 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:30:39.941 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:30:39.943 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:30:39.945 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:30:49.451 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 10:30:49.453 [http-nio-8080-exec-2] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:30:49.630 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 10:30:49.638 [http-nio-8080-exec-2] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 10:30:49.813 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 10:30:51.640 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:30:51.649 [http-nio-8080-exec-4] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:30:51.663 [http-nio-8080-exec-4] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:30:51.831 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:30:51.841 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:30:51.845 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:30:52.039 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:30:52.049 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:30:52.050 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:30:52.053 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:30:54.353 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:30:54.362 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:30:55.060 [http-nio-8080-exec-5] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:30:57.053 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:30:57.184 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:30:57.717 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:30:57.887 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:31:11.497 [http-nio-8080-exec-7] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:31:11.687 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:31:11.848 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:31:12.181 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:31:12.353 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:31:12.703 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:31:17.177 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:31:17.188 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:31:17.230 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:31:17.398 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:31:17.410 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:31:17.412 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:31:17.590 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:31:17.599 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:31:17.604 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:31:17.607 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:31:36.171 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 10:31:36.180 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 10:31:36.381 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 10:31:36.389 [http-nio-8080-exec-1] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 10:31:36.614 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 10:31:38.970 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:31:38.983 [http-nio-8080-exec-3] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:31:38.997 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:31:39.163 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:31:39.172 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:31:39.174 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:31:39.326 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:31:39.335 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:31:39.337 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:31:39.340 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:31:41.977 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:31:41.991 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:31:42.644 [http-nio-8080-exec-4] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:31:45.065 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:31:45.082 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:31:45.581 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:31:45.746 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 10:32:03.916 [http-nio-8080-exec-6] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:32:04.103 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:32:04.259 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:32:04.633 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:32:04.803 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:32:05.142 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 10:32:08.460 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:32:08.484 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:32:08.500 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:32:08.691 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:32:08.701 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:32:08.704 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:32:08.893 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:32:08.902 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:32:08.904 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:32:08.906 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 10:32:10.866 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:32:10.873 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:32:11.571 [http-nio-8080-exec-8] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 10:32:17.612 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 10:32:17.629 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 10:32:17.631 [http-nio-8080-exec-9] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 10:32:17.807 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 10:32:17.816 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 10:32:17.821 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 10:32:17.993 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 10:32:18.003 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 10:32:18.006 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 10:32:18.009 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:12:54.338 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 14712 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 13:12:54.355 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 13:12:56.314 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 13:12:56.316 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 13:12:56.579 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 13:12:57.447 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.757 seconds (JVM running for 5.057)
2020-07-15 13:13:15.407 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 13:13:25.987 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 13:13:26.001 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 13:13:26.615 [http-nio-8080-exec-3] ERROR C.G.S.CustomAuthenticationManager: The user credentials do not match the database stored values!
2020-07-15 13:13:39.645 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 13:13:39.654 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 13:13:39.818 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 13:13:39.826 [http-nio-8080-exec-5] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 13:13:39.958 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 13:13:41.712 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:13:41.725 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:13:41.726 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:13:41.902 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:13:41.910 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:13:41.912 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:13:42.076 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:13:42.083 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:13:42.085 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:13:42.086 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:13:44.063 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:13:44.065 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:13:44.790 [http-nio-8080-exec-8] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:13:46.846 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:13:46.849 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:13:47.400 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:13:47.569 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:14:28.089 [http-nio-8080-exec-10] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:14:28.261 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:14:28.420 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:14:28.779 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:14:28.963 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:14:29.345 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:14:36.125 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:14:36.135 [http-nio-8080-exec-1] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:14:36.136 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:14:36.314 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:14:36.322 [http-nio-8080-exec-1] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:14:36.322 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:14:36.481 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:14:36.488 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:14:36.488 [http-nio-8080-exec-1] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:14:36.489 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:16:13.643 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 13:16:13.651 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 13:16:13.821 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 13:16:13.828 [http-nio-8080-exec-5] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 13:16:13.948 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 13:16:15.898 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:16:15.913 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:16:15.927 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:16:16.090 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:16:16.097 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:16:16.098 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:16:16.261 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:16:16.262 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:16:16.262 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:16:16.263 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:16:18.395 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:16:18.399 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:16:19.070 [http-nio-8080-exec-8] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:16:21.062 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:16:21.073 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:16:21.568 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:16:21.734 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:16:33.062 [http-nio-8080-exec-10] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:16:33.246 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:16:33.396 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:16:33.716 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:16:33.881 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:16:34.224 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:16:37.530 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:16:37.536 [http-nio-8080-exec-1] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:16:37.537 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:16:37.718 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:16:37.721 [http-nio-8080-exec-1] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:16:37.722 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:16:37.907 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:16:37.914 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:16:37.916 [http-nio-8080-exec-1] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:16:37.916 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:16:47.627 [http-nio-8080-exec-4] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 13:16:47.635 [http-nio-8080-exec-4] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 13:16:47.804 [http-nio-8080-exec-4] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 13:16:47.817 [http-nio-8080-exec-4] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 13:16:47.938 [http-nio-8080-exec-4] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 13:16:49.819 [http-nio-8080-exec-6] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:16:49.825 [http-nio-8080-exec-6] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:16:49.825 [http-nio-8080-exec-6] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:16:49.992 [http-nio-8080-exec-6] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:16:49.999 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:16:50.001 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:16:50.183 [http-nio-8080-exec-6] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:16:50.191 [http-nio-8080-exec-6] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:16:50.192 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:16:50.193 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:16:51.978 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:16:51.992 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:16:52.669 [http-nio-8080-exec-7] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:16:54.563 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:16:54.569 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:16:55.097 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:16:55.279 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:17:19.335 [http-nio-8080-exec-9] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:17:19.511 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:17:19.673 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:17:20.005 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:17:20.173 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:17:20.495 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:17:23.674 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:17:23.693 [http-nio-8080-exec-10] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:17:23.706 [http-nio-8080-exec-10] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:17:24.370 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:17:24.378 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:17:24.379 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:17:25.112 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:17:25.119 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:17:25.120 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:17:25.120 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:28:05.241 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 15968 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 13:28:05.268 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 13:28:07.059 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 13:28:07.067 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 13:28:07.295 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 13:28:08.070 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.406 seconds (JVM running for 4.617)
2020-07-15 13:28:13.910 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 13:28:20.216 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 13:28:20.228 [http-nio-8080-exec-2] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 13:28:20.714 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 13:28:20.733 [http-nio-8080-exec-2] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 13:28:20.855 [http-nio-8080-exec-2] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 13:28:22.434 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:28:22.437 [http-nio-8080-exec-4] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:28:22.439 [http-nio-8080-exec-4] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:28:22.612 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:28:22.621 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:28:22.622 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:28:22.790 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:28:22.798 [http-nio-8080-exec-4] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:28:22.799 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:28:22.800 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:28:24.669 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:28:24.683 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:28:25.357 [http-nio-8080-exec-5] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:28:27.509 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:28:27.520 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:28:28.037 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:28:28.218 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:29:06.540 [http-nio-8080-exec-7] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:29:06.699 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:29:06.866 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:29:07.196 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:29:07.370 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:29:07.705 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:29:29.444 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:29:29.453 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:29:29.454 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:29:29.630 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:29:29.638 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:29:29.641 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:29:29.807 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:29:29.815 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:29:29.816 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:29:29.818 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:29:38.696 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 13:29:38.704 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 13:29:38.868 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 13:29:38.877 [http-nio-8080-exec-1] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 13:29:38.993 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 13:29:40.724 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:29:40.740 [http-nio-8080-exec-3] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:29:40.754 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:29:40.929 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:29:40.937 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:29:40.938 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:29:41.110 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:29:41.117 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:29:41.118 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:29:41.119 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:29:42.920 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:29:42.937 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:29:43.604 [http-nio-8080-exec-4] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:29:47.198 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:29:47.206 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:29:47.731 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:29:47.899 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:30:08.825 [http-nio-8080-exec-6] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:30:09.005 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:30:09.167 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:30:09.527 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:30:09.709 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:30:10.025 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:30:14.023 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:30:14.043 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:30:14.056 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:30:14.227 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:30:14.228 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:30:14.229 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:30:14.392 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:30:14.400 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:30:14.401 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:30:14.401 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:35:17.646 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 13:35:17.654 [http-nio-8080-exec-1] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 13:35:17.833 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 13:35:17.841 [http-nio-8080-exec-1] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 13:35:17.961 [http-nio-8080-exec-1] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 13:35:20.415 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:35:20.423 [http-nio-8080-exec-3] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:35:20.439 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:35:20.623 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:35:20.631 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:35:20.631 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:35:20.786 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:35:20.792 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:35:20.794 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:35:20.795 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:35:22.619 [http-nio-8080-exec-4] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:35:22.626 [http-nio-8080-exec-4] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:35:23.326 [http-nio-8080-exec-4] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:35:25.184 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:35:25.195 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:35:25.707 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:35:25.869 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:35:49.427 [http-nio-8080-exec-6] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:35:49.608 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:35:49.787 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:35:50.149 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:35:50.327 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:35:50.661 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:40:30.932 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:40:30.941 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:40:30.954 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:40:31.147 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:40:31.155 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:40:31.157 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:40:31.328 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:40:31.335 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:40:31.336 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:40:31.338 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 13:40:47.122 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:40:47.135 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:40:47.834 [http-nio-8080-exec-9] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:42:50.462 [http-nio-8080-exec-1] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:42:50.489 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:42:51.025 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:42:51.197 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 13:43:08.618 [http-nio-8080-exec-2] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 13:43:08.810 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:43:08.980 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:43:09.322 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:43:09.497 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:43:09.844 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 13:43:13.980 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 13:43:13.995 [http-nio-8080-exec-3] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 13:43:14.010 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 13:43:14.173 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 13:43:14.175 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 13:43:14.175 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 13:43:14.379 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 13:43:14.379 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 13:43:14.380 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 13:43:14.381 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 14:53:25.061 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 15208 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 14:53:25.080 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 14:53:30.169 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 5.979 seconds (JVM running for 8.96)
2020-07-15 14:53:32.096 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 14:53:32.098 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 14:53:32.107 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 14:53:32.108 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 14:53:32.796 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 14:53:32.799 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 14:53:32.800 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 14:53:32.801 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 14:57:09.163 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 9568 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 14:57:09.187 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 14:57:14.972 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 6.595 seconds (JVM running for 9.187)
2020-07-15 14:57:16.414 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 14:57:16.422 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 14:57:16.426 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 14:57:16.427 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 14:57:17.237 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 14:57:17.239 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 14:57:17.239 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 14:57:17.240 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:05:38.786 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 10932 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 15:05:38.803 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 15:05:43.993 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 6.089 seconds (JVM running for 8.838)
2020-07-15 15:05:46.048 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:05:46.058 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:05:46.060 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:05:46.061 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:05:46.089 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:05:46.098 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:05:46.100 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:05:46.102 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:22:51.715 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 15160 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 15:22:51.733 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 15:22:56.553 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 5.712 seconds (JVM running for 8.355)
2020-07-15 15:22:58.705 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:22:58.714 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:22:58.716 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:22:58.718 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:22:58.779 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:22:58.782 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:22:58.785 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:22:58.788 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:27:52.060 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 16872 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 15:27:52.083 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 15:27:56.856 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 5.563 seconds (JVM running for 8.013)
2020-07-15 15:27:59.272 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:27:59.274 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:27:59.275 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:27:59.277 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:27:59.307 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:27:59.309 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:27:59.310 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:27:59.315 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:29:35.590 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 12936 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 15:29:35.613 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 15:29:40.537 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 5.719 seconds (JVM running for 8.165)
2020-07-15 15:29:42.903 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:29:42.912 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:29:42.914 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:29:42.916 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:29:42.938 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:29:42.939 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:29:42.941 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:29:42.942 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:30:12.497 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 7588 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 15:30:12.514 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 15:30:17.278 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 5.558 seconds (JVM running for 8.055)
2020-07-15 15:30:19.704 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:30:19.713 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:30:19.714 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:30:19.716 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:30:19.754 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:30:19.756 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:30:19.758 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:30:19.759 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:31:43.774 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 17140 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 15:31:43.798 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 15:31:48.673 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 5.699 seconds (JVM running for 8.159)
2020-07-15 15:31:51.021 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:31:51.032 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:31:51.034 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:31:51.037 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:31:51.107 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:31:51.116 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:31:51.122 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:31:51.123 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:32:55.819 [main] INFO  C.G.Survey.SurveyControllerTest: Starting SurveyControllerTest on Haard with PID 8608 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 15:32:55.841 [main] INFO  C.G.Survey.SurveyControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 15:33:00.987 [main] INFO  C.G.Survey.SurveyControllerTest: Started SurveyControllerTest in 6.032 seconds (JVM running for 8.43)
2020-07-15 15:33:03.248 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:33:03.256 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:33:03.257 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:33:03.258 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 15:33:03.340 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 15:33:03.348 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 15:33:03.353 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 15:33:03.358 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 16:23:22.312 [main] INFO  C.G.Survey.SurveyRespositoryTest: Starting SurveyRespositoryTest on Haard with PID 2852 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 16:23:22.334 [main] INFO  C.G.Survey.SurveyRespositoryTest: No active profile set, falling back to default profiles: default
2020-07-15 16:23:28.713 [main] INFO  C.G.Survey.SurveyRespositoryTest: Started SurveyRespositoryTest in 7.232 seconds (JVM running for 10.155)
2020-07-15 16:23:53.029 [main] INFO  C.G.Survey.SurveyRespositoryTest: Starting SurveyRespositoryTest on Haard with PID 11040 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 16:23:53.052 [main] INFO  C.G.Survey.SurveyRespositoryTest: No active profile set, falling back to default profiles: default
2020-07-15 16:23:59.290 [main] INFO  C.G.Survey.SurveyRespositoryTest: Started SurveyRespositoryTest in 7.049 seconds (JVM running for 9.572)
2020-07-15 16:24:36.551 [main] INFO  C.G.Survey.SurveyRespositoryTest: Starting SurveyRespositoryTest on Haard with PID 17940 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 16:24:36.577 [main] INFO  C.G.Survey.SurveyRespositoryTest: No active profile set, falling back to default profiles: default
2020-07-15 16:24:43.061 [main] INFO  C.G.Survey.SurveyRespositoryTest: Started SurveyRespositoryTest in 7.299 seconds (JVM running for 9.963)
2020-07-15 16:25:19.390 [main] INFO  C.G.Survey.SurveyRespositoryTest: Starting SurveyRespositoryTest on Haard with PID 8540 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 16:25:19.414 [main] INFO  C.G.Survey.SurveyRespositoryTest: No active profile set, falling back to default profiles: default
2020-07-15 16:25:25.528 [main] INFO  C.G.Survey.SurveyRespositoryTest: Started SurveyRespositoryTest in 6.933 seconds (JVM running for 9.495)
2020-07-15 16:25:53.305 [main] INFO  C.G.Survey.SurveyRespositoryTest: Starting SurveyRespositoryTest on Haard with PID 18936 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 16:25:53.329 [main] INFO  C.G.Survey.SurveyRespositoryTest: No active profile set, falling back to default profiles: default
2020-07-15 16:26:10.402 [main] INFO  C.G.Survey.SurveyRespositoryTest: Started SurveyRespositoryTest in 18.331 seconds (JVM running for 22.184)
2020-07-15 20:31:10.263 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 15804 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 20:31:10.280 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 20:31:12.199 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 20:31:12.202 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 20:31:12.501 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 20:31:13.359 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.789 seconds (JVM running for 5.231)
2020-07-15 20:31:30.673 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 20:31:42.466 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 20:31:42.473 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 20:31:42.980 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 20:31:42.984 [http-nio-8080-exec-3] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 20:31:43.106 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 20:31:44.793 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 20:31:44.794 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 20:31:44.795 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 20:31:44.957 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 20:31:44.969 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 20:31:44.970 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 20:31:45.135 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 20:31:45.147 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 20:31:45.149 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 20:31:50.118 [http-nio-8080-exec-6] INFO  C.G.Course.CourseController: Fetch TA for a course using course Id
2020-07-15 20:31:50.138 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 20:31:50.152 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getTAForCourse to get TA for a course using course Id
2020-07-15 20:32:05.314 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 20:32:05.328 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserIdByEmailId to get a user by Email Id
2020-07-15 20:32:05.509 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleForCourse to get a user role for the Course by User Id
2020-07-15 20:32:05.683 [http-nio-8080-exec-7] WARN  C.G.Course.CourseController: TA is not successfully added to the course
2020-07-15 20:32:05.692 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 20:32:05.693 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getTAForCourse to get TA for a course using course Id
2020-07-15 20:32:29.130 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 20:32:29.135 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserIdByEmailId to get a user by Email Id
2020-07-15 20:32:29.309 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleForCourse to get a user role for the Course by User Id
2020-07-15 20:32:29.486 [http-nio-8080-exec-8] WARN  C.G.Course.CourseController: TA is not successfully added to the course
2020-07-15 20:32:29.494 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 20:32:29.495 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getTAForCourse to get TA for a course using course Id
2020-07-15 20:32:53.021 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 20:32:53.025 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserIdByEmailId to get a user by Email Id
2020-07-15 20:32:53.186 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleForCourse to get a user role for the Course by User Id
2020-07-15 20:32:53.347 [http-nio-8080-exec-9] WARN  C.G.Course.CourseController: TA is not successfully added to the course
2020-07-15 20:32:53.355 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 20:32:53.356 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getTAForCourse to get TA for a course using course Id
2020-07-15 20:33:01.503 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 20:33:01.512 [http-nio-8080-exec-10] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 20:33:01.527 [http-nio-8080-exec-10] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 20:33:01.711 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 20:33:01.720 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 20:33:01.721 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 20:33:01.894 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 20:33:01.901 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 20:33:01.902 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 20:33:05.535 [http-nio-8080-exec-1] INFO  C.G.Course.CourseController: Fetch TA for a course using course Id
2020-07-15 20:33:05.538 [http-nio-8080-exec-1] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 20:33:05.551 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getTAForCourse to get TA for a course using course Id
2020-07-15 20:33:15.953 [http-nio-8080-exec-2] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 20:33:15.958 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserIdByEmailId to get a user by Email Id
2020-07-15 20:33:16.131 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleForCourse to get a user role for the Course by User Id
2020-07-15 20:33:16.305 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_addTAToCourse to add TA to a Course
2020-07-15 20:33:16.640 [http-nio-8080-exec-2] INFO  C.G.Course.CourseController: TA added successfully
2020-07-15 20:33:16.647 [http-nio-8080-exec-2] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 20:33:16.649 [http-nio-8080-exec-2] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getTAForCourse to get TA for a course using course Id
2020-07-15 20:33:19.407 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 20:33:19.427 [http-nio-8080-exec-3] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 20:33:19.451 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 20:33:19.631 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 20:33:19.640 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 20:33:19.642 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 20:33:19.819 [http-nio-8080-exec-3] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 20:33:19.828 [http-nio-8080-exec-3] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 20:33:19.829 [http-nio-8080-exec-3] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getInstructorCoursesByEmailId to get courses of a Instructor using Email Id
2020-07-15 20:33:30.916 [http-nio-8080-exec-6] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 20:33:30.922 [http-nio-8080-exec-6] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 20:33:31.091 [http-nio-8080-exec-6] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 20:33:31.099 [http-nio-8080-exec-6] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 20:33:31.226 [http-nio-8080-exec-6] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 20:33:32.964 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 20:33:32.967 [http-nio-8080-exec-8] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 20:33:32.981 [http-nio-8080-exec-8] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 20:33:33.174 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 20:33:33.182 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 20:33:33.184 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 20:33:33.344 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 20:33:33.352 [http-nio-8080-exec-8] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 20:33:33.353 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 20:33:33.354 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 20:33:35.445 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 20:33:35.447 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 20:33:35.786 [http-nio-8080-exec-9] ERROR C.G.Survey.SurveyRepository: Could not execute the Stored procedure sp_getSurveyId because of an SQL Exception PROCEDURE CSCI5308_22_TEST.sp_getSurveyId does not exist
2020-07-15 20:33:35.948 [http-nio-8080-exec-9] ERROR C.G.Survey.SurveyRepository: Could not execute the Stored procedure sp_getSurveyQuestions because of an SQL Exception PROCEDURE CSCI5308_22_TEST.sp_checkSurveyPublished does not exist
2020-07-15 20:33:37.881 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 20:33:37.907 [http-nio-8080-exec-10] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 20:33:37.921 [http-nio-8080-exec-10] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 20:33:38.081 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 20:33:38.089 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 20:33:38.090 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 20:33:38.261 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 20:33:38.269 [http-nio-8080-exec-10] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 20:33:38.270 [http-nio-8080-exec-10] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 20:33:38.271 [http-nio-8080-exec-10] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 22:00:07.476 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 17760 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:00:07.501 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 22:00:09.563 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 22:00:09.565 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 22:00:09.840 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 22:00:10.692 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.818 seconds (JVM running for 5.595)
2020-07-15 22:00:22.522 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 22:00:43.821 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 22:00:43.833 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 22:00:44.421 [http-nio-8080-exec-3] ERROR C.G.S.CustomAuthenticationManager: The user credentials do not match the database stored values!
2020-07-15 22:00:53.197 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 22:00:53.206 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 22:00:53.380 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 22:00:53.389 [http-nio-8080-exec-5] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 22:00:53.532 [http-nio-8080-exec-5] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 22:00:56.591 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:00:56.598 [http-nio-8080-exec-7] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:00:56.611 [http-nio-8080-exec-7] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 22:00:56.822 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:00:56.828 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:00:56.830 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:00:56.993 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 22:00:57.000 [http-nio-8080-exec-7] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 22:00:57.001 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:00:57.002 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 22:00:59.065 [http-nio-8080-exec-8] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:00:59.078 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:00:59.410 [http-nio-8080-exec-8] ERROR C.G.Survey.SurveyRepository: Could not execute the Stored procedure sp_getSurveyId because of an SQL Exception PROCEDURE CSCI5308_22_TEST.sp_getSurveyId does not exist
2020-07-15 22:00:59.572 [http-nio-8080-exec-8] ERROR C.G.Survey.SurveyRepository: Could not execute the Stored procedure sp_getSurveyQuestions because of an SQL Exception PROCEDURE CSCI5308_22_TEST.sp_checkSurveyPublished does not exist
2020-07-15 22:01:10.326 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:01:10.340 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:01:10.341 [http-nio-8080-exec-9] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 22:01:10.518 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:01:10.525 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:01:10.525 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:01:10.688 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 22:01:10.696 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 22:01:10.697 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:01:10.698 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 22:02:18.213 [http-nio-8080-exec-1] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:02:18.223 [http-nio-8080-exec-1] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:02:18.526 [http-nio-8080-exec-1] ERROR C.G.Survey.SurveyRepository: Could not execute the Stored procedure sp_getSurveyId because of an SQL Exception PROCEDURE CSCI5308_22_TEST.sp_getSurveyId does not exist
2020-07-15 22:02:18.682 [http-nio-8080-exec-1] ERROR C.G.Survey.SurveyRepository: Could not execute the Stored procedure sp_getSurveyQuestions because of an SQL Exception PROCEDURE CSCI5308_22_TEST.sp_checkSurveyPublished does not exist
2020-07-15 22:05:40.324 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 12344 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:05:40.341 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 22:05:41.916 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 22:05:41.927 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 22:05:42.132 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 22:05:42.958 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.172 seconds (JVM running for 4.355)
2020-07-15 22:07:36.742 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 10204 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:07:36.768 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 22:07:39.006 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 22:07:39.014 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 22:07:39.237 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 22:07:40.014 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 3.823 seconds (JVM running for 5.073)
2020-07-15 22:08:36.615 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-15 22:08:45.491 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Fetching the user details by email id
2020-07-15 22:08:45.502 [http-nio-8080-exec-3] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getUserByEmailId to fetch user details for given emailId
2020-07-15 22:08:46.039 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Checking if the user's password is correct and assigning rights
2020-07-15 22:08:46.047 [http-nio-8080-exec-3] INFO  C.G.Security.BCryptEncryption: Checking if the password plain text matches with its encrypted one for authentication
2020-07-15 22:08:46.167 [http-nio-8080-exec-3] INFO  C.G.S.CustomAuthenticationManager: Assigning rights to the user based on the type
2020-07-15 22:08:48.356 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:08:48.369 [http-nio-8080-exec-5] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:08:48.372 [http-nio-8080-exec-5] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 22:08:48.545 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:08:48.554 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:08:48.555 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:08:48.721 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 22:08:48.729 [http-nio-8080-exec-5] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 22:08:48.730 [http-nio-8080-exec-5] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:08:48.731 [http-nio-8080-exec-5] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 22:08:51.692 [http-nio-8080-exec-6] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:08:51.696 [http-nio-8080-exec-6] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:08:52.381 [http-nio-8080-exec-6] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 22:08:55.505 [http-nio-8080-exec-7] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:08:55.518 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:08:56.041 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 22:08:56.209 [http-nio-8080-exec-7] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getOptionsForQuestion to fetch the option list for a multiple choice question
2020-07-15 22:09:12.284 [http-nio-8080-exec-8] ERROR C.G.Survey.ResponseRepository: Could not execute the Stored procedure sp_getUserId because of an SQL Exception Column 'password' not found.
2020-07-15 22:09:12.460 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 22:09:12.632 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 22:09:12.956 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 22:09:13.119 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 22:09:13.465 [http-nio-8080-exec-8] INFO  C.G.Q.QuestionAdminRepository: Calling the stored procedure sp_getQuestionById to fetch a particular question by its Id
2020-07-15 22:09:18.689 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:09:18.695 [http-nio-8080-exec-9] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:09:18.697 [http-nio-8080-exec-9] INFO  C.G.User.UserRepository: Calling the stored procedure sp_getAdminDetails to fetch details of Admin user
2020-07-15 22:09:18.899 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:09:18.906 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:09:18.908 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getUserRoleByEmailId to get user role by Email Id
2020-07-15 22:09:19.076 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 22:09:19.083 [http-nio-8080-exec-9] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 22:09:19.084 [http-nio-8080-exec-9] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:09:19.085 [http-nio-8080-exec-9] INFO  C.G.Q.QuestionManagerRepository: Calling stored procedure sp_getStudentCoursesByEmailId to get student courses by Email Id
2020-07-15 22:24:09.216 [main] INFO  C.G.GroupFormationToolApplication: Starting GroupFormationToolApplication on Haard with PID 12776 (C:\Users\shah3\Desktop\group22\bin\main started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:24:09.246 [main] INFO  C.G.GroupFormationToolApplication: No active profile set, falling back to default profiles: default
2020-07-15 22:24:11.392 [main] INFO  o.a.catalina.core.StandardService: Starting service [Tomcat]
2020-07-15 22:24:11.401 [main] INFO  o.a.catalina.core.StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-07-15 22:24:11.688 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]: Initializing Spring embedded WebApplicationContext
2020-07-15 22:24:12.981 [main] INFO  C.G.GroupFormationToolApplication: Started GroupFormationToolApplication in 4.737 seconds (JVM running for 6.476)
2020-07-15 22:37:50.442 [main] INFO  C.G.Security.BCryptEncryptionTest: Starting BCryptEncryptionTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:37:50.447 [main] INFO  C.G.Security.BCryptEncryptionTest: No active profile set, falling back to default profiles: default
2020-07-15 22:37:56.470 [main] INFO  C.G.Security.BCryptEncryptionTest: Started BCryptEncryptionTest in 6.891 seconds (JVM running for 11.23)
2020-07-15 22:37:57.555 [main] INFO  C.G.Security.LoginControllerTest: Starting LoginControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:37:57.560 [main] INFO  C.G.Security.LoginControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:00.328 [main] INFO  C.G.Security.LoginControllerTest: Started LoginControllerTest in 2.894 seconds (JVM running for 15.088)
2020-07-15 22:38:01.483 [main] INFO  C.G.S.UserRegistrationControllerTest: Starting UserRegistrationControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:01.486 [main] INFO  C.G.S.UserRegistrationControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:03.924 [main] INFO  C.G.S.UserRegistrationControllerTest: Started UserRegistrationControllerTest in 2.516 seconds (JVM running for 18.684)
2020-07-15 22:38:04.920 [main] INFO  C.G.S.UserRegistrationController: Fetching the password policies of the system
2020-07-15 22:38:04.925 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to fetch all the password security policies from database
2020-07-15 22:38:05.311 [main] INFO  C.G.Survey.ResponseControllerTest: Starting ResponseControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:05.314 [main] INFO  C.G.Survey.ResponseControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:07.581 [main] INFO  C.G.Survey.ResponseControllerTest: Started ResponseControllerTest in 2.372 seconds (JVM running for 22.342)
2020-07-15 22:38:07.895 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 22:38:07.897 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 22:38:07.899 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 22:38:07.899 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 22:38:07.918 [main] INFO  C.G.C.InstructorCourseController: Getting survey id for the course
2020-07-15 22:38:07.919 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 22:38:07.921 [main] INFO  C.G.C.InstructorCourseController: Checking if the survey is published
2020-07-15 22:38:07.922 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 22:38:08.019 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:08.115 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:08.128 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:08.129 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey has an algorithm for group formation for the course from the database
2020-07-15 22:38:08.133 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:08.135 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:08.136 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:08.138 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:08.140 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:08.140 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey has an algorithm for group formation for the course from the database
2020-07-15 22:38:08.144 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:08.150 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 22:38:08.153 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey has an algorithm for group formation for the course from the database
2020-07-15 22:38:08.163 [main] INFO  C.GroupFormationTool.Survey.Survey: Publishing the survey
2020-07-15 22:38:08.440 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.443 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.445 [main] INFO  C.G.Security.BCryptEncryption: Encrypting the password of the user using the BCrypt Encryptor
2020-07-15 22:38:08.574 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.575 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.576 [main] ERROR C.G.Password.Policy: Minimum password length security policy is violated
2020-07-15 22:38:08.577 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.578 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.580 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.581 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.582 [main] INFO  C.G.Password.ForgotPasswordManager: User violated history while updating password
2020-07-15 22:38:08.583 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.585 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.601 [main] INFO  C.G.Password.ForgotPasswordManager: User is updating existing token
2020-07-15 22:38:08.603 [main] INFO  C.G.Password.ForgotPasswordManager: User is adding new token
2020-07-15 22:38:08.796 [main] WARN  C.G.Password.PasswordHistoryManager: Could not fetch history setting value
2020-07-15 22:38:08.875 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to fetch all the password security policies from database
2020-07-15 22:38:08.877 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to fetch all the password security policies from database
2020-07-15 22:38:08.931 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.935 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.936 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.940 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.942 [main] ERROR C.G.Password.Policy: Minimum password length security policy is violated
2020-07-15 22:38:08.942 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.943 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.944 [main] ERROR C.G.Password.Policy: Maximum password length security policy is violated
2020-07-15 22:38:08.946 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.947 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.949 [main] ERROR C.G.Password.Policy: Minimum upper case charachters required password security policy is violated
2020-07-15 22:38:08.950 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.952 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.952 [main] ERROR C.G.Password.Policy: Minimum lower case charachters required password security policy is violated
2020-07-15 22:38:08.954 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.956 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.957 [main] ERROR C.G.Password.Policy: Minimum special symbols required password security policy is violated
2020-07-15 22:38:08.958 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:08.959 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:08.959 [main] ERROR C.G.Password.Policy: Charachters not allowed in password security policy is violated
2020-07-15 22:38:09.244 [main] INFO  C.G.G.GroupFormationControllerTest: Starting GroupFormationControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:09.251 [main] INFO  C.G.G.GroupFormationControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:12.089 [main] INFO  C.G.G.GroupFormationControllerTest: Started GroupFormationControllerTest in 2.933 seconds (JVM running for 26.85)
2020-07-15 22:38:12.110 [main] INFO  C.G.G.GroupFormationController: Checking if the survey can be used to form groups
2020-07-15 22:38:12.112 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:12.112 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:12.113 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey has an algorithm for group formation for the course from the database
2020-07-15 22:38:12.114 [main] INFO  C.G.G.GroupFormationController: Getting the list of groups formed on the instructor's algorithm
2020-07-15 22:38:12.164 [main] INFO  C.G.G.GroupFormationController: Checking if the survey can be used to form groups
2020-07-15 22:38:12.166 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:12.184 [main] INFO  C.G.G.GroupFormationController: Checking if the survey can be used to form groups
2020-07-15 22:38:12.185 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:12.186 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:12.199 [main] INFO  C.G.G.GroupFormationController: Checking if the survey can be used to form groups
2020-07-15 22:38:12.201 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is created for the course from the database
2020-07-15 22:38:12.202 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:12.203 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey has an algorithm for group formation for the course from the database
2020-07-15 22:38:12.234 [main] INFO  C.G.G.GroupFormationManager: Fetching the groups for the course from the repository
2020-07-15 22:38:12.456 [main] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:38:12.457 [main] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:38:12.464 [main] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 22:38:12.464 [main] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 22:38:12.465 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:12.466 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:12.466 [main] INFO  C.GroupFormationTool.User.User: Calling the user repository function to save the new user to Database
2020-07-15 22:38:12.468 [main] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 22:38:12.468 [main] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 22:38:12.468 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:12.468 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:12.470 [main] ERROR C.G.Password.Policy: Minimum password length security policy is violated
2020-07-15 22:38:12.470 [main] WARN  C.GroupFormationTool.User.User: User cannot be created due to violation of password security policy
2020-07-15 22:38:12.471 [main] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 22:38:12.471 [main] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 22:38:12.471 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:12.471 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:12.472 [main] WARN  C.GroupFormationTool.User.User: User cannot be created due to mismatch of confirm password field
2020-07-15 22:38:12.473 [main] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 22:38:12.474 [main] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 22:38:12.475 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:12.476 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:12.476 [main] WARN  C.GroupFormationTool.User.User: User cannot be created as the user with same details already exists
2020-07-15 22:38:12.477 [main] INFO  C.GroupFormationTool.User.User: Creating the user and saving it to the database
2020-07-15 22:38:12.478 [main] INFO  C.GroupFormationTool.User.User: Checking for invalid user data
2020-07-15 22:38:12.478 [main] WARN  C.GroupFormationTool.User.User: User cannot be created due to some invalid details
2020-07-15 22:38:12.479 [main] INFO  C.G.Password.Policy: Calling the Policy Repository to check if the password follows enabled security policies
2020-07-15 22:38:12.479 [main] INFO  C.G.Password.Policy: Checking if the password follows enabled security policies
2020-07-15 22:38:12.480 [main] INFO  C.GroupFormationTool.User.User: Calling the user repository function to save the new user to Database
2020-07-15 22:38:12.810 [main] INFO  C.G.Q.QuestionAdminControllerTest: Starting QuestionAdminControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:12.819 [main] INFO  C.G.Q.QuestionAdminControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:14.850 [main] INFO  C.G.Q.QuestionAdminControllerTest: Started QuestionAdminControllerTest in 2.149 seconds (JVM running for 29.61)
2020-07-15 22:38:14.891 [main] INFO  C.G.Q.QuestionAdminController: Fetching the question by its id for the current instructor to view
2020-07-15 22:38:14.893 [main] INFO  C.G.Question.Question: Calling the getQuestionById repository function to fetch a question from the Database
2020-07-15 22:38:14.967 [main] INFO  C.G.Q.QuestionAdminController: Fetching the question bank sorted based on the field like title and date for the logged in instructor
2020-07-15 22:38:14.968 [main] INFO  C.G.Question.Question: Calling the getSortedQuestionListForInstructor repository function to fetch the question bank in a sorted order from the Database
2020-07-15 22:38:14.996 [main] INFO  C.G.Q.QuestionAdminController: Fetching the question bank for the logged in instructor
2020-07-15 22:38:14.997 [main] INFO  C.G.Question.Question: Calling the getQuestionListForInstructor repository function to fetch the question bank from the Database
2020-07-15 22:38:15.186 [main] INFO  C.G.Q.QuestionManagerControllerTest: Starting QuestionManagerControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:15.194 [main] INFO  C.G.Q.QuestionManagerControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:17.257 [main] INFO  C.G.Q.QuestionManagerControllerTest: Started QuestionManagerControllerTest in 2.181 seconds (JVM running for 32.017)
2020-07-15 22:38:17.303 [main] INFO  C.G.Q.QuestionManagerController: Saving the question created by the instructor to the database
2020-07-15 22:38:17.308 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.309 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.312 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.315 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.317 [main] INFO  C.G.Q.QuestionManagerController: Question is saved to the database and the instructor views the saved question
2020-07-15 22:38:17.330 [main] INFO  C.G.Q.QuestionManagerController: Saving the question created by the instructor to the database
2020-07-15 22:38:17.332 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.333 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.333 [main] INFO  C.G.Q.QuestionManagerController: One or more input fields have invalid/empty data
2020-07-15 22:38:17.399 [main] INFO  C.G.Q.QuestionManagerController: Deleting the question created by the instructor from the database
2020-07-15 22:38:17.401 [main] INFO  C.G.Question.Question: Calling the deleteQuestion repository function to delete the question from the Database
2020-07-15 22:38:17.402 [main] INFO  C.G.Q.QuestionManagerController: Question successfully deleted!
2020-07-15 22:38:17.403 [main] INFO  C.G.Q.QuestionManagerController: Redirecting to the instructor's question list page
2020-07-15 22:38:17.403 [main] INFO  C.G.Question.Question: Calling the getQuestionListForInstructor repository function to fetch the question bank from the Database
2020-07-15 22:38:17.420 [main] INFO  C.G.Q.QuestionManagerController: Deleting the question created by the instructor from the database
2020-07-15 22:38:17.423 [main] INFO  C.G.Question.Question: Calling the deleteQuestion repository function to delete the question from the Database
2020-07-15 22:38:17.425 [main] INFO  C.G.Q.QuestionManagerController: The question could not be deleted
2020-07-15 22:38:17.426 [main] INFO  C.G.Q.QuestionManagerController: Redirecting to the instructor's question list page
2020-07-15 22:38:17.426 [main] INFO  C.G.Question.Question: Calling the getQuestionListForInstructor repository function to fetch the question bank from the Database
2020-07-15 22:38:17.492 [main] INFO  C.G.Question.Question: Calling the getQuestionListForInstructor repository function to fetch the question bank from the Database
2020-07-15 22:38:17.493 [main] INFO  C.G.Question.Question: Calling the getQuestionListForInstructor repository function to fetch the question bank from the Database
2020-07-15 22:38:17.507 [main] INFO  C.G.Question.Question: Calling the deleteQuestion repository function to delete the question from the Database
2020-07-15 22:38:17.518 [main] INFO  C.G.Question.Question: Calling the getSortedQuestionListForInstructor repository function to fetch the question bank in a sorted order from the Database
2020-07-15 22:38:17.519 [main] INFO  C.G.Question.Question: Calling the getSortedQuestionListForInstructor repository function to fetch the question bank in a sorted order from the Database
2020-07-15 22:38:17.532 [main] INFO  C.G.Question.Question: Calling the getQuestionById repository function to fetch a question from the Database
2020-07-15 22:38:17.533 [main] INFO  C.G.Question.Question: Calling the getOptionsForTheQuestion repository function to fetch the options of a multiple choice question from the Database
2020-07-15 22:38:17.579 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.580 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.580 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.581 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.582 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.583 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.584 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.584 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.585 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.586 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.588 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.590 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.591 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.592 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.595 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.595 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.598 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.600 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.600 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.600 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.601 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.602 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.604 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.607 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.608 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.608 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.610 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.610 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.612 [main] INFO  C.G.Question.Question: Creating the options for question if applicable (Multiple Choice only)
2020-07-15 22:38:17.612 [main] INFO  C.G.Question.Question: Calling the createQuestion repository function to save the question to Database
2020-07-15 22:38:17.613 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.614 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.615 [main] INFO  C.G.Question.Question: Creating the question and saving it to the database
2020-07-15 22:38:17.616 [main] INFO  C.G.Question.Question: Checking for invalid data
2020-07-15 22:38:17.850 [main] INFO  C.G.Course.AdminControllerTest: Starting AdminControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:17.858 [main] INFO  C.G.Course.AdminControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:19.572 [main] INFO  C.G.Course.AdminControllerTest: Started AdminControllerTest in 1.782 seconds (JVM running for 34.332)
2020-07-15 22:38:19.636 [main] INFO  C.G.Q.QuestionAdminController: Fetching course details by using course Id
2020-07-15 22:38:19.639 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:38:19.640 [main] INFO  C.G.Q.QuestionAdminController: Assign/Add instructor to a course
2020-07-15 22:38:19.641 [main] INFO  C.G.Question.Question: Function call to add an instructor for a course using course Id and email Id
2020-07-15 22:38:19.642 [main] INFO  C.G.Q.QuestionAdminController: Fetch instructor for a course
2020-07-15 22:38:19.642 [main] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 22:38:19.647 [main] INFO  C.G.Q.QuestionAdminController: Fetching course details by using course Id
2020-07-15 22:38:19.648 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:38:19.649 [main] INFO  C.G.Q.QuestionAdminController: Assign/Add instructor to a course
2020-07-15 22:38:19.650 [main] INFO  C.G.Question.Question: Function call to add an instructor for a course using course Id and email Id
2020-07-15 22:38:19.651 [main] INFO  C.G.Q.QuestionAdminController: Fetch instructor for a course
2020-07-15 22:38:19.652 [main] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 22:38:19.679 [main] INFO  C.G.Q.QuestionAdminController: Fetching course details using courseId from the Database
2020-07-15 22:38:19.680 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:38:19.682 [main] INFO  C.G.Question.Question: The function call return the users that are not enrolled as an instructor for a course
2020-07-15 22:38:19.683 [main] INFO  C.G.Q.QuestionAdminController: Fetching instructors list for a course using courseId
2020-07-15 22:38:19.684 [main] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 22:38:19.753 [main] INFO  C.G.Q.QuestionAdminController: Fetching all course details from the Database
2020-07-15 22:38:19.756 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:20.025 [main] INFO  C.G.Course.CourseControllerTest: Starting CourseControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:20.026 [main] INFO  C.G.Course.CourseControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:21.699 [main] INFO  C.G.Course.CourseControllerTest: Started CourseControllerTest in 1.87 seconds (JVM running for 36.459)
2020-07-15 22:38:21.731 [main] INFO  C.GroupFormationTool.Course.Course: Creating a new course and storing it in the database
2020-07-15 22:38:21.732 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:21.733 [main] WARN  C.G.Course.CourseController: Course is not added successfully
2020-07-15 22:38:21.807 [main] INFO  C.GroupFormationTool.Course.Course: Creating a new course and storing it in the database
2020-07-15 22:38:21.809 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:21.811 [main] WARN  C.G.Course.CourseController: Course is not added successfully
2020-07-15 22:38:21.849 [main] INFO  C.G.Course.CourseController: Fetch TA for a course using course Id
2020-07-15 22:38:21.850 [main] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 22:38:21.908 [main] INFO  C.G.Course.CourseController: Function call to fetch all the courses details
2020-07-15 22:38:21.908 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:21.927 [main] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 22:38:21.928 [main] WARN  C.G.Course.CourseController: TA is not successfully added to the course
2020-07-15 22:38:21.929 [main] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 22:38:21.937 [main] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 22:38:21.939 [main] WARN  C.G.Course.CourseController: TA is not successfully added to the course
2020-07-15 22:38:21.939 [main] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 22:38:21.956 [main] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:38:21.958 [main] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:38:21.958 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:21.991 [main] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:38:21.995 [main] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:38:21.997 [main] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:38:21.998 [main] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:38:21.999 [main] INFO  C.G.Course.CourseController: User is a Guest User
2020-07-15 22:38:21.999 [main] INFO  C.G.Course.CourseController: Function call to fetch all courses details for a guest user
2020-07-15 22:38:22.000 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.015 [main] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:38:22.017 [main] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:38:22.018 [main] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:38:22.019 [main] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:38:22.020 [main] INFO  C.G.Course.CourseController: User is a Student
2020-07-15 22:38:22.022 [main] INFO  C.G.Course.CourseController: Function call to fetch enrolled courses for a student
2020-07-15 22:38:22.024 [main] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:38:22.035 [main] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:38:22.036 [main] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:38:22.037 [main] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:38:22.038 [main] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:38:22.040 [main] INFO  C.G.Course.CourseController: User is a TA
2020-07-15 22:38:22.041 [main] INFO  C.G.Course.CourseController: Function call to get TA courses
2020-07-15 22:38:22.042 [main] INFO  C.G.Question.Question: Get the courses for a TA using email Id
2020-07-15 22:38:22.043 [main] INFO  C.G.Course.CourseController: Function call to fetch student courses
2020-07-15 22:38:22.043 [main] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:38:22.054 [main] INFO  C.G.Course.CourseController: Condition check if current user is admin or not
2020-07-15 22:38:22.055 [main] INFO  C.GroupFormationTool.User.User: Checking if current user is admin
2020-07-15 22:38:22.056 [main] INFO  C.G.Course.CourseController: Fetch user role based on th email Id
2020-07-15 22:38:22.057 [main] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:38:22.060 [main] INFO  C.G.Course.CourseController: User is an Instructor
2020-07-15 22:38:22.068 [main] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 22:38:22.097 [main] INFO  C.GroupFormationTool.Course.Course: Calling the deleteCourse repository function to delete the course from the Database
2020-07-15 22:38:22.098 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.099 [main] INFO  C.G.Course.CourseController: Course is deleted successfully
2020-07-15 22:38:22.106 [main] INFO  C.GroupFormationTool.Course.Course: Calling the deleteCourse repository function to delete the course from the Database
2020-07-15 22:38:22.108 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.109 [main] INFO  C.G.Course.CourseController: Course is not deleted successfully
2020-07-15 22:38:22.114 [main] INFO  C.GroupFormationTool.Course.Course: Calling the deleteCourse repository function to delete the course from the Database
2020-07-15 22:38:22.115 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.116 [main] INFO  C.G.Course.CourseController: Course is deleted successfully
2020-07-15 22:38:22.135 [main] INFO  C.GroupFormationTool.Course.Course: Calling the deleteCourse repository function to delete the course from the Database
2020-07-15 22:38:22.136 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.141 [main] INFO  C.G.Course.CourseController: Course is not deleted successfully
2020-07-15 22:38:22.240 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.240 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.242 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.243 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:22.267 [main] INFO  C.GroupFormationTool.Course.Course: Creating a new course and storing it in the database
2020-07-15 22:38:22.268 [main] INFO  C.GroupFormationTool.Course.Course: Creating a new course and storing it in the database
2020-07-15 22:38:22.275 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:38:22.276 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:38:22.277 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:38:22.278 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:38:22.297 [main] INFO  C.GroupFormationTool.Course.Course: Calling the deleteCourse repository function to delete the course from the Database
2020-07-15 22:38:22.298 [main] INFO  C.GroupFormationTool.Course.Course: Calling the deleteCourse repository function to delete the course from the Database
2020-07-15 22:38:22.413 [main] INFO  C.G.Course.GuestControllerTest: Starting GuestControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:22.680 [main] INFO  C.G.Course.GuestControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:24.399 [main] INFO  C.G.Course.GuestControllerTest: Started GuestControllerTest in 2.078 seconds (JVM running for 39.159)
2020-07-15 22:38:24.409 [main] INFO  C.G.Q.QuestionManagerRepository: Function call to fetch all course details for a Guest user
2020-07-15 22:38:24.410 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get all courses
2020-07-15 22:38:24.550 [main] INFO  C.G.C.InstructorCourseControllerTest: Starting InstructorCourseControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:24.557 [main] INFO  C.G.C.InstructorCourseControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:26.093 [main] INFO  C.G.C.InstructorCourseControllerTest: Started InstructorCourseControllerTest in 1.62 seconds (JVM running for 40.854)
2020-07-15 22:38:26.111 [main] INFO  C.G.C.InstructorCourseController: Checking if instructor has created a survey for the course
2020-07-15 22:38:26.113 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 22:38:26.114 [main] INFO  C.G.C.InstructorCourseController: Checking if instructor has published the survey for the course
2020-07-15 22:38:26.114 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:26.583 [main] INFO  C.G.Q.QuestionManagerRepository: Added valid students in a proper data list 
2020-07-15 22:38:26.707 [main] INFO  C.G.Course.TAControllerTest: Starting TAControllerTest on Haard with PID 9524 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:26.715 [main] INFO  C.G.Course.TAControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:38:28.336 [main] INFO  C.G.Course.TAControllerTest: Started TAControllerTest in 1.692 seconds (JVM running for 43.096)
2020-07-15 22:38:28.354 [main] INFO  C.G.Course.TaController: Checking if instructor has created a survey for the course
2020-07-15 22:38:28.356 [main] INFO  C.GroupFormationTool.Survey.Survey: Getting survey id based on course id
2020-07-15 22:38:28.357 [main] INFO  C.G.Course.TaController: Checking if instructor has published the survey for the course
2020-07-15 22:38:28.358 [main] INFO  C.GroupFormationTool.Survey.Survey: Checking if the survey is published for the course from the database
2020-07-15 22:38:28.468 [main] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 22:38:28.484 [main] INFO  C.G.Question.Question: Function call to get instructors for a course using email Id
2020-07-15 22:38:28.491 [main] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:38:28.492 [main] INFO  C.G.Question.Question: Get the courses enrolled by a student using student's email Id
2020-07-15 22:38:28.508 [main] INFO  C.G.Question.Question: The function call return the users that are not enrolled as an instructor for a course
2020-07-15 22:38:28.510 [main] INFO  C.G.Question.Question: The function call return the users that are not enrolled as an instructor for a course
2020-07-15 22:38:28.516 [main] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 22:38:28.516 [main] INFO  C.G.Question.Question: Function call to get TA for a course using course Id
2020-07-15 22:38:28.541 [main] INFO  C.G.Question.Question: Function call to add an instructor for a course using course Id and email Id
2020-07-15 22:38:28.544 [main] INFO  C.G.Question.Question: Function call to add an instructor for a course using course Id and email Id
2020-07-15 22:38:28.551 [main] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 22:38:28.552 [main] INFO  C.G.Question.Question: Function call to enroll a TA for the course using email id
2020-07-15 22:38:28.569 [main] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:38:28.570 [main] INFO  C.G.Question.Question: Get the role of a user by email Id
2020-07-15 22:38:28.590 [main] INFO  C.G.Question.Question: Get the courses for a TA using email Id
2020-07-15 22:38:28.591 [main] INFO  C.G.Question.Question: Get the courses for a TA using email Id
2020-07-15 22:38:28.614 [main] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 22:38:28.616 [main] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 22:38:28.669 [main] INFO  C.G.Mail.MailManager: smtp connection for mail has been setup
2020-07-15 22:38:28.673 [main] INFO  C.G.Mail.MailManager: smtp connection for mail has been setup
2020-07-15 22:38:28.674 [main] INFO  C.G.Mail.MailManager: smtp connection for mail has been setup
2020-07-15 22:38:58.277 [main] INFO  C.G.Course.AdminControllerTest: Starting AdminControllerTest on Haard with PID 11308 (started by shah3 in C:\Users\shah3\Desktop\group22)
2020-07-15 22:38:58.289 [main] INFO  C.G.Course.AdminControllerTest: No active profile set, falling back to default profiles: default
2020-07-15 22:39:03.884 [main] INFO  C.G.Course.AdminControllerTest: Started AdminControllerTest in 6.483 seconds (JVM running for 9.416)
2020-07-15 22:39:05.729 [main] INFO  C.G.Q.QuestionAdminController: Fetching course details by using course Id
2020-07-15 22:39:05.739 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:39:05.751 [main] INFO  C.G.Q.QuestionAdminController: Assign/Add instructor to a course
2020-07-15 22:39:05.752 [main] INFO  C.G.Question.Question: Function call to add an instructor for a course using course Id and email Id
2020-07-15 22:39:05.753 [main] INFO  C.G.Q.QuestionAdminController: Fetch instructor for a course
2020-07-15 22:39:05.756 [main] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
2020-07-15 22:39:05.863 [main] INFO  C.G.Q.QuestionAdminController: Fetching course details by using course Id
2020-07-15 22:39:05.871 [main] INFO  C.GroupFormationTool.Course.Course: Calling the courseRepository function to get courses details by Id
2020-07-15 22:39:05.874 [main] INFO  C.G.Q.QuestionAdminController: Assign/Add instructor to a course
2020-07-15 22:39:05.874 [main] INFO  C.G.Question.Question: Function call to add an instructor for a course using course Id and email Id
2020-07-15 22:39:05.876 [main] INFO  C.G.Q.QuestionAdminController: Fetch instructor for a course
2020-07-15 22:39:05.876 [main] INFO  C.G.Question.Question: Function call to get instructor for a course using course Id
